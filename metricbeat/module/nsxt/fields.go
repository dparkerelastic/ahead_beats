// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package nsxt

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "nsxt", asset.ModuleFieldsPri, AssetNsxt); err != nil {
		panic(err)
	}
}

// AssetNsxt returns asset data.
// This is the base64 encoded zlib format compressed contents of module/nsxt.
func AssetNsxt() string {
	return "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"
}
